// Generated by CoffeeScript 1.7.1
var Texture, TextureManager;

TextureManager = (function() {
  function TextureManager() {}

  TextureManager.prototype.textures = {};

  TextureManager.prototype.add = function(name, path) {
    this.textures[name] = new Texture(path);
    if (typeof gl !== "undefined" && gl !== null) {
      this.textures[name].load();
    }
  };

  TextureManager.prototype.loadAll = function() {
    var text, _i, _len, _ref, _results;
    if (typeof gl === "undefined" || gl === null) {
      return;
    }
    _ref = this.textures;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      text = _ref[_i];
      _results.push(text.load());
    }
    return _results;
  };

  TextureManager.prototype.get = function(name) {
    return this.textures[name];
  };

  return TextureManager;

})();

Texture = (function() {
  Texture.prototype.width = 0;

  Texture.prototype.height = 0;

  Texture.prototype.image = null;

  Texture.prototype.texture = -1;

  Texture.prototype.path = "";

  Texture.prototype.loaded = false;

  function Texture(path) {
    this.path = path;
    return;
  }

  Texture.prototype.load = function() {
    if (this.loaded) {
      return;
    }
    this.image = new Image();
    this.image.onload = (function(_this) {
      return function() {
        _this.texture = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_2D, _this.texture);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, _this.image);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
        gl.bindTexture(gl.TEXTURE_2D, null);
        _this.loaded = true;
      };
    })(this);
    this.image.src = this.path;
  };

  Texture.prototype.use = function() {
    if (typeof gl === "undefined" || gl === null) {
      return;
    }
    if (!this.loaded) {
      return;
    }
    return gl.bindTexture(gl.TEXTURE_2D, this.texture);
  };

  return Texture;

})();
